{"version":3,"file":"static/js/625.1d88d43c.chunk.js","mappings":"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","sources":["redux/Contacts/selectors.js","redux/Filter/filter-selector.js","components/ContactsList/ContactsList.styled.js","components/Contact/Contact.styled.js","components/Contact/Contact.js","components/ContactsList/ContactsList.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","pages/Contacts/Contacts.js"],"sourcesContent":["export const getContacts = state => state.contacts;\nexport const getIsLoading = state => state.isLoading;\nexport const getError = state => state.error;\n","export const getFilter = state => state.filter;","import styled from 'styled-components';\n\nexport const TitleList = styled.h2`\n  margin: 0;\n  margin-top: 15px;\n  padding: 10px;\n`;\nexport const ContactList = styled.ul`\n  margin: 0;\n  padding: 0;\n  width: auto;\n`;\n","import styled from 'styled-components';\n\nexport const ContactItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  height: 25px;\n  padding-top: 15px;\n`;\nexport const Info = styled.div`\n  display: flex;\n  min-width: 350px;\n  justify-content: space-between;\n  /* align-content: space-between; */\n`;\nexport const Name = styled.p`\n  display: inline-block;\n  font-size: 20px;\n`;\nexport const Phone = styled.p`\n  display: inline-block;\n  font-size: 20px;\n`;\nexport const DeleteBtn = styled.button`\n  width: 100px;\n  height: 30px;\n  margin-left: 15px;\n  border: none;\n  border-radius: 5px;\n  background-color: rgb(184, 201, 201);\n  cursor: pointer;\n  :hover {\n    color:red;\n    background-color: aliceblue;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/Contacts/operations';\nimport {\n  ContactItem,\n  Info,\n  Name,\n  Phone,\n  DeleteBtn,\n} from 'components/Contact/Contact.styled';\n\nexport const Contact = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  return (\n    <ContactItem key={id}>\n      <Info>\n        <Name>{name}:</Name>\n        <Phone>{number}</Phone>\n      </Info>\n      <DeleteBtn type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n        Delete\n      </DeleteBtn>\n    </ContactItem>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/Contacts/operations';\nimport { getContacts, getIsLoading, getError } from 'redux/Contacts/selectors';\nimport { getFilter } from 'redux/Filter/filter-selector';\nimport {\n  TitleList,\n  ContactList,\n} from 'components/ContactsList/ContactsList.styled';\nimport { Contact } from 'components/Contact/Contact';\n\nconst ContactsList = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n  const { contacts } = useSelector(getContacts);\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n  console.log(contacts);\n\n  // Вызываем операцию\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const visibleContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase().trim())\n  );\n  console.log(visibleContacts);\n  return (\n    <>\n      {isLoading && !error && <b>Request in progress...</b>}\n      {<TitleList>Contacts</TitleList>}\n      {\n        <ContactList>\n          {visibleContacts.map(({ id, name, number }) => (\n            <Contact key={id} id={id} name={name} number={number} />\n          ))}\n          {visibleContacts.length === 0 && (\n            <span className=\"Message\">Сontact list is empty </span>\n          )}\n        </ContactList>\n      }\n\n      {error && <p>Not found</p>}\n    </>\n  );\n};\n\nexport default ContactsList;\n","import styled from 'styled-components';\n\nexport const ContactsForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 30px;\n  width: 400px;\n  height: auto;\n  margin-bottom: 30px;\n  border: 1px solid teal;\n  background: rgb(184, 201, 201);\n`;\nexport const Thumb = styled.div`\ndisplay:flex;\nheight:25px;\nmargin-bottom:15px;\n`\nexport const Icon = styled.div`\ndisplay:flex;\nalign-items: center;\nheight:27px;\nwidth: 30px;\npadding-left: 5px;\nmargin-top: 10px;\n\nbackground-color:white;\n`\nexport const ContactsInput = styled.input`\n  width:170px;\n  height: 25px;\n  padding-left: 10px;\n  margin: 0 auto;\n  margin-top: 10px;\n  outline: none;\n  border: none;\n`;\nexport const LabelInput = styled.label`\n  width:174px;\n  \n`;\n\nexport const ContactsBtn = styled.button`\n  width: 100px;\n  height: 30px;\n  margin: 0 auto;\n  margin-top: 10px;\n  cursor: pointer;\n  border: none;\n  border-radius: 5px;\n  :hover {\n    background-color: aliceblue;\n  }\n`;\n","import React, { useState } from 'react';\nimport toast from 'react-hot-toast';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from '../../redux/Contacts/selectors';\nimport { addContact } from 'redux/Contacts/operations';\nimport {\n  ContactsForm,\n  LabelInput,\n  Thumb,\n  Icon,\n  ContactsInput,\n  ContactsBtn,\n} from 'components/ContactForm/ContactForm.styled';\nimport {\n  BsFillPersonFill,\n  BsFillTelephoneFill,\n  // BsPhoneLandscape,\n} from 'react-icons/bs';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const { contacts } = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const contactNew = {\n      name: name,\n      number: number,\n    };\n\n    const findNameIndex = contacts.findIndex(\n      contact => contact.name === contactNew.name\n    );\n    if (findNameIndex < 0) {\n      dispatch(addContact(contactNew));\n      toast.success(`${contactNew.name} added to contacts`, { duration: 500 });\n    } else {\n      toast.error(`${contactNew.name} is already in contacts`, {\n        duration: 2000,\n      });\n    }\n    reset();\n  };\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <ContactsForm onSubmit={handleSubmit}>\n      <LabelInput>\n        Name\n        <Thumb>\n          <Icon>\n            <BsFillPersonFill size={20} />\n          </Icon>\n          <ContactsInput\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            placeholder=\"Enter your full name\"\n            onChange={handleChange}\n          />\n        </Thumb>\n      </LabelInput>\n\n      <LabelInput>\n        Number\n        <Thumb>\n          <Icon>\n            <BsFillTelephoneFill size={15} />\n          </Icon>\n          <ContactsInput\n            className=\"ContactsInput\"\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            placeholder=\"Enter your phone number\"\n            onChange={handleChange}\n          />\n        </Thumb>\n      </LabelInput>\n\n      <ContactsBtn type=\"submit\" className=\"ContactsBtn\">\n        Add contact\n      </ContactsBtn>\n    </ContactsForm>\n  );\n}\n","import styled from 'styled-components';\n\nexport const FilterWraper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nexport const LabelFilter = styled.label`\n  font-weight: 600;\n`;\n\nexport const InputForm = styled.input`\n  height: 25px;\n  width: 170px;\n  padding-left: 10px;\n  margin: 0 auto;\n  margin-top: 10px;\n  outline: none;\n  border: 1px solid black;\n`;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { changeFilter } from 'redux/Filter/sliceFilter';\nimport {\n  FilterWraper,\n  InputForm,\n  LabelFilter,\n} from 'components/Filter/Filter.styled';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const hanleChangeFilter = e => {\n    const query = e.target.value;\n    dispatch(changeFilter(query));\n    console.log(query);\n  };\n\n  return (\n    <FilterWraper>\n      <LabelFilter htmlFor=\"filter\">Find contacts by name</LabelFilter>\n      <InputForm type=\"text\" name=\"filter\" onChange={hanleChangeFilter} />\n    </FilterWraper>\n  );\n};\n\nexport default Filter;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport ContactsList from 'components/ContactsList/ContactsList';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport { fetchContacts } from 'redux/Contacts/operations';\nimport { getIsLoading } from 'redux/Contacts/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <ContactForm />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <Filter />\n      <ContactsList />\n    </>\n  );\n}\n"],"names":["getContacts","state","contacts","getIsLoading","isLoading","getError","error","getFilter","filter","TitleList","styled","ContactList","ContactItem","Info","Name","Phone","DeleteBtn","Contact","id","name","number","dispatch","useDispatch","type","onClick","deleteContact","useSelector","console","log","useEffect","fetchContacts","visibleContacts","contact","toLowerCase","includes","trim","map","length","className","ContactsForm","Thumb","Icon","ContactsInput","LabelInput","ContactsBtn","ContactForm","useState","setName","setNumber","handleChange","e","target","value","reset","onSubmit","preventDefault","contactNew","findIndex","addContact","toast","duration","size","pattern","title","required","placeholder","onChange","FilterWraper","LabelFilter","InputForm","htmlFor","query","changeFilter","Contacts","Helmet"],"sourceRoot":""}